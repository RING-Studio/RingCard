[gd_scene load_steps=3 format=3 uid="uid://dhbo80mjtejgv"]

[ext_resource type="Texture2D" uid="uid://bsxsyspwcoqtw" path="res://relic_icons/SCISSOR.png" id="1"]

[sub_resource type="GDScript" id="GDScript_3g3k1"]
script/source = "extends TextureRect
var shake_tween: Tween
@export var hold_item: String = \"???noeffect\"

func update(item_name):
	hold_item = item_name
	if ResourceLoader.exists(\"res://relic_icons/\" + hold_item + \".png\"):
		texture = load(\"res://relic_icons/\" + hold_item + \".png\")

func _on_mouse_exited():
	Popups.unpop()

func _on_gui_input(event):
	Popups.pop_at(global_position + Vector2(0.0, 0.0), tr(hold_item) + \"\\n\" + tr(hold_item + \"info\"))

func shine():
	if shake_tween != null and shake_tween.is_running(): 
		shake_tween.custom_step(999.0)
	shake_tween = create_tween().set_ease(Tween.EASE_OUT).set_trans(Tween.TRANS_QUINT)
	#change_rotation(0.0, 0)
	shake_tween.tween_property(self, \"rotation_degrees\", -10, 0.05).as_relative()
	#rotation_degrees -= 5
	shake_tween.tween_property(self, \"rotation_degrees\", 10, 0.2).as_relative()
"

[node name="ItemLabel" type="TextureRect"]
self_modulate = Color(1, 1, 1, 0.443137)
custom_minimum_size = Vector2(80, 80)
offset_right = 80.0
offset_bottom = 80.0
pivot_offset = Vector2(40, 40)
texture = ExtResource("1")
expand_mode = 1
stretch_mode = 4
flip_h = true
flip_v = true
script = SubResource("GDScript_3g3k1")

[connection signal="gui_input" from="." to="." method="_on_gui_input"]
[connection signal="mouse_exited" from="." to="." method="_on_mouse_exited"]
